#!/usr/bin/env bash

# XXX read credentials (private key, user, ipaddr, which should not be exposed to Github)

key=""
user=""
ip=""

for line in $(cat secret)
do
    _key=$(echo $line | cut -d'=' -f 1)
    _value=$(echo $line | cut -d'=' -f 2)
    case $_key in
    key)
        key=$_value 
        ;;
    user)
        user=$_value 
        ;;
    ip)
        ip=$_value 
        ;;
    *)
        ;;
    esac
done

alert_missing_value() {
    target_key=$2
    message=$1

    if [ -z $target_key ]; then
        printf "\n$message missing in config\n\n"
        exit
    fi
}

alert_missing_value "key"  $key  
alert_missing_value "user" $user 
alert_missing_value "ip"   $ip   

echo "$key, $user, $ip"

operation=""
#
# Suppose there is only one operation arg starts from '-'
#
for x in $@
do
    if [[ $x == -* ]]; then
        operation=$x
        break
    fi
done

alert_missing_value "operation arg" $operation 

show_help_menu() {
    echo ""
    echo " -c                  ... simple ssh connection to the EC2 instance"
    echo " -s [file path]      ... send single file to the EC2 instance"
    echo " -g [opt: --cached]  ... send git diff result to the EC2 instance"
    echo " -r [directory path] ... send recursively (including subsirectory) to the EC2 instance"
    echo ""
}

if [[ ! $operation =~ ^-[csgr] ]]; then
    printf "operation arg is incorrect."
    show_help_menu
fi

shift
case $operation in
-c)
    ssh -i $key $user@$ip
    ;;
-s)
    file_from=$1
    alert_missing_value "scp_target_file" $file_from
    remote_root_dir="~"
    echo scp -i $key $file_from $user@$ip:$remote_root_dir:/$(dirname $file_from)
    ;;
-g)
    ;;
-r)
    ;;
*)
    ;;
esac
